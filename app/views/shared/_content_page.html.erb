<%
  # provide a default array for collecting CSS for sections
  css = []

  # if 'sections' is passed in as a local_assigns, all of this is ignored.
  if local_assigns[:sections].blank?
    # always have a title
    sections = [{:yield => :body_content_title, :fallback => page_title, :title => true}]

    # append sections from this page.
    @page.parts.inject(sections) do |s, part|
      # we have some default yields, body_content_left and body_content_right
      # these map to 'body' and 'side_body' fields in default Refinery.
      section = {:fallback => part.body}
      section[:yield] = case (title_symbol = part.title.to_s.gsub(/\ /, '').underscore.to_sym)
        when :body then :body_content_left
        when :side_body then :body_content_right
        else title_symbol
        end

      # add section to the list unless we were specifically requested not to.
      # otherwise, add css saying it's been removed.
      unless (local_assigns[:hide_sections]||=[]).include?(section[:yield])
        s << section
      else
        css << "no_#{section[:yield]}"
      end
    end unless @page.nil? or @page.parts.blank?

    # Ensure that even without @page.parts we still have body_content_left and body_content_right
    all_yields = sections.collect{|s| s[:yield]}
    sections << {:yield => :body_content_left} unless all_yields.include?(:body_content_left)
    sections << {:yield => :body_content_right} unless all_yields.include?(:body_content_right)
  end

  # you can add more sections to the list using something like this:
  # sections |= [{:yield => :something_else, :fallback => another_method, :id => 'something'}]

  sections.each do |section|
    section[:html] = yield(section[:yield]) if section[:yield].present?

    if section[:html].blank? and !local_assigns[:show_empty_sections] and
       !local_assigns[:remove_automatic_sections] and section.keys.include?(:fallback) and
       section[:fallback].present?
      section[:html] = raw(section[:fallback])
    end

    dom_id = section[:id] || section[:yield]
    if section[:html].present?
      if section[:title]
        section[:html] = "<h1 id='#{dom_id}'>#{section[:html]}</h1>".html_safe
      else
        section[:html] = "<section id='#{dom_id}'><div class='inner'>#{section[:html]}</div></section>".html_safe
      end
    else
      css << "no_#{dom_id}"
    end
  end
-%>
<section id='body_content'<%= " class='#{css.join(' ')}'" if css.present? %>>
  <div class="content_other">
  <div class="long">
    <div class="title"><%= @page.title unless @page.link_url == "/contact" %><%= raw t("contact.title1") if @page.link_url == "/contact" %></div>
    <div class="head"></div>
    <div class="body">
      <div class="padding_div"><%= raw @page.content_for(:body) unless @page.link_url == "/contact" %></div>
      <%= raw sections.map{|section| section[:html]}.join("\n") if @page.link_url == "/contact" -%>
      <div class="clear"></div>
    </div>
    <div class="foot"></div>
  </div>

  <div class="third">
    <div class="title">
      <% if @page.id == 3 %>
        <%= t("third_box.title") %>
      <% end %>
      <%= raw t("contact.title2") if @page.link_url == "/contact" %>
    </div>
    <div class="head"></div>
    <div class="body <%= "contact" if @page.link_url == "/contact" %> <%= "calendar" if @page.id == 3 %>">
      <% if @page.id == 3 %>
        <div class="events">
				<% Event.order("id desc").limit(3).each_with_index do |event, index| %>
          <div class="event">
            <div class="event_date"><%= l event.created_at.to_date, :format => :short %></div>
            <div class="event_content">
              <h3><%= link_to truncate(event.name, :length => 30), event %></h3>
            	<%= truncate((strip_tags(event.text)), :length => 43) %>
              <div class="clear"></div>
            </div>
          <%= raw "<div class='hr'></div>" unless index == 2 %>
					</div>

        <% end %>
				<div class="clear"></div>
				</div>
      <% else %>
        <div class="padding_div"><%= raw @page.content_for(:side_body) %></div>
      <% end %>
    </div>
    <div class="foot"></div>
  </div>
</div>

</section>
<%#= render :partial => '/shared/draft_page_message' unless @page.nil? or @page.live? -%>

